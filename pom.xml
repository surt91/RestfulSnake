<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>me.schawe</groupId>
	<artifactId>multijsnake</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>MultiJSnake</name>
	<description>Multiplayer Snake</description>
	<properties>
		<java.version>11</java.version>

		<jacoco.unit-tests.limit.instruction-ratio>0.5</jacoco.unit-tests.limit.instruction-ratio>
		<jacoco.unit-tests.limit.branch-ratio>0.5</jacoco.unit-tests.limit.branch-ratio>
		<jacoco.unit-tests.limit.class-complexity>100</jacoco.unit-tests.limit.class-complexity>
		<jacoco.unit-tests.limit.method-complexity>20</jacoco.unit-tests.limit.method-complexity>
		<jacoco.aggregate.limit.instruction-ratio>0.8</jacoco.aggregate.limit.instruction-ratio>
		<jacoco.aggregate.limit.branch-ratio>0.7</jacoco.aggregate.limit.branch-ratio>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- https://stackoverflow.com/a/49978310 -->
		<!-- We use an h2 database for testing and replace it in production with postgres via env -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- In-Memory database used for local development & testing -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Switch back from Spring Boot 2.x standard HikariCP to Tomcat JDBC,
        configured later in Heroku (see https://stackoverflow.com/a/49970142/4964553) -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
		</dependency>

		<!-- PostgreSQL used in Staging and Production environment, e.g. on Heroku -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.4.1</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- load models and infer -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>1.0.0-M1.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.bytedeco.javacpp-presets</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.datavec</groupId>
					<artifactId>datavec-data-image</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-modelimport</artifactId>
			<version>1.0.0-M1.1</version>
		</dependency>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>1.0.0-M1.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.bytedeco.javacpp-presets</groupId>
					<artifactId>mkl-dnn-platform</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.29</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.9</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.8</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>${argLine}</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<skip>${skipTests}</skip>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<skip>${skipTests}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.0</version>

				<configuration>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v17.1.0</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
							<skip>${skipNodeCompile}</skip>
						</configuration>
					</execution>
					<execution>
						<id>webpack</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<!-- Usually we want the production build. For the Debug Build use `run debug` -->
<!--							<arguments>run build</arguments>-->
							<arguments>run build</arguments>
							<skip>${skipNodeCompile}</skip>
						</configuration>
					</execution>
					<execution>
						<id>cypress</id>
						<phase>integration-test</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run cy</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
					<id>clean-artifacts</id>
					<phase>install</phase>
					<goals><goal>clean</goal></goals>
					<configuration>
						<excludeDefaultDirectories>true</excludeDefaultDirectories>
						<filesets>
							<fileset>
								<directory>target</directory>
								<excludes>
									<exclude>*.jar</exclude>
								</excludes>
							</fileset>
							<fileset>
								<directory>node_modules</directory>
							</fileset>
						</filesets>
					</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.5.0</version>
				<configuration>
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
					<nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
					<nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
					<pipAnalyzerEnabled>true</pipAnalyzerEnabled>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<skip>${skipTests}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>

					<execution>
						<id>check-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.unit-tests.limit.instruction-ratio}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.unit-tests.limit.branch-ratio}</minimum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>TOTALCOUNT</value>
											<maximum>${jacoco.unit-tests.limit.class-complexity}</maximum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>METHOD</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>TOTALCOUNT</value>
											<maximum>${jacoco.unit-tests.limit.method-complexity}</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>

					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>

					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>

					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
									<excludes>
										<exclude>aggregate.exec</exclude>
									</excludes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/aggregate.exec</destFile>
						</configuration>
					</execution>

					<execution>
						<id>post-merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/aggregate.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>check-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/aggregate.exec</dataFile>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.aggregate.limit.instruction-ratio}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.aggregate.limit.branch-ratio}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
